# Start zsh for each new command that is opened
set -g default-command "zsh"

# Remap prefix to the same as screen.
set -g prefix C-a
unbind C-b

# Last active window
bind-key C-a last-window

# Shortcuts to change to next/previous window: the -n option allows typing
# those keys without the prefix.
bind-key C-Tab next-window
bind-key C-S-Tab previous-window

# Set 256 colors
set -g default-terminal "screen-256color"

# Send command to the inner session if running tmux inside tmux.
bind-key a send-prefix 

# Start window numbering at 1
set -g base-index 1

# Fix the escaping time to 0, so we can immediately press two characters in cmd.
set -s escape-time 0

# Enable vi mode and v(isual) and y(ank) mode.
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'V' rectangle-toggle

# use "v" and "s" to do vertical/horizontal splits, like vim
bind s split-window -v
bind v split-window -h

# use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use the vim resize keys (the number specifies for how much to resize)
bind < resize-pane -L 5
bind > resize-pane -R 5

# pass certain keys to applications, like vim, running in tmux
set-option -gw xterm-keys on
bind-key -n C-Right send-keys C-Right

# pass environment variables
set -g update-environment -r

# close the pane/window without confirmation
bind-key & kill-window
bind-key x kill-pane

# tmux logging: start with 'ctrl-b H' and stop with 'ctrl-b h'
bind-key H pipe-pane 'cat >>$HOME/tmux/tmux-#W.log' \; display-message 'Started logging to $HOME/tmux/tmux-#W.log'
bind-key h pipe-pane \; display-message 'Ended logging to $HOME/tmux/tmux-#W.log'

# Window titles.
#  #H  Hostname of local host
#  #I  Current window index
#  #P  Current pane index
#  #S  Current session index
#  #T  Current window title
#  #W  Current window name
#  #   A literal ‘#’
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

# Automatically rename window title
setw -g automatic-rename on

# Status bar
set -g status-bg black
set -g status-fg white
#set -g status-left '#[fg=green][ses:#S win:#I/#(tmux list-windows | wc -l) pan:#P]'
#set -g status-left-length 100
#set -g status-right '#[fg=green]|#H|uptime:#(uptime | cut -d " " -f 2)|'
#set -g status-position 'bottom'

# Highlight active window
set-window-option -g window-status-current-bg red

set-option -g status-justify left
#set-option -g status-left '#[fg=green][#[bg=black,fg=cyan]#S#[fg=green]]'
#set-window-option -g window-status-format '#[fg=cyan,dim]#I#[fg=blue]:#[default]#W#[fg=grey,dim]#F'
#set-window-option -g window-status-current-format '#[bg=blue,fg=cyan,bold]#I#[bg=blue,fg=cyan]:#[fg=colour230]#W#[fg=dim]#F'


# Enable mouse scrolling
set -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on

# Notify us on activity in window
setw -g monitor-activity on
set -g visual-activity on

# History
set -g history-limit 100000

# Enable copy/pasting from tmux to X:
#   move x clipboard into tmux paste buffer
#   move tmux copy buffer into x clipboard
bind C-p run-shell -b "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
bind C-y run-shell -b "tmux show-buffer | xclip -i"



